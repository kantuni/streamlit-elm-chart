{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/lodash/lodash.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/AwaitValue.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/webpack/buildin/global.js","../node_modules/webpack/buildin/module.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","require","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","FUNC_ERROR_TEXT","PLACEHOLDER","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","key","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","string","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","_","runInContext","context","defaults","pick","Date","Error","Math","String","arrayProto","funcProto","objectProto","coreJsData","funcToString","hasOwnProperty","idCounter","maskSrcKey","uid","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","get","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","id","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","flatten","otherFunc","type","isKeyable","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bind","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","define","_arrayLikeToArray","len","arr2","privateData","wrappers","pd","event","retv","console","assert","setCancelFlag","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","enumerable","defineRedirectDescriptor","configurable","defineCallDescriptor","getWrapper","BaseEvent","CustomEvent","writable","getOwnPropertyDescriptor","defineWrapper","isStopped","setPassiveListener","composedPath","stopPropagation","stopImmediatePropagation","Boolean","bubbles","composed","cancelBubble","initEvent","window","setPrototypeOf","listenersMap","x","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","listener","prev","delete","newNode","passive","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","addEventListener","optionsIsObj","capture","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","defaultPrevented","_createForOfIteratorHelper","F","s","f","it","normalCompletion","didErr","_e2","asyncGeneratorStep","gen","_next","_throw","info","then","_asyncToGenerator","_classCallCheck","instance","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_AwaitValue","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","wrappedAwait","settle","_invoke","request","_wrapAsyncGenerator","_asyncIterator","asyncIterator","_asyncGeneratorDelegate","inner","awaitWrap","iter","waiting","pump","flatbuffers","a","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","float64","Float64Array","isLittleEndian","Uint16Array","Long","ZERO","toFloat64","equals","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","decoderError","fatal","opt_code_point","TextDecoder","encoding","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","decode","input_stream","code_points","cp","codePointsToString","encode","opt_string","u","d","stringToCodePoints","_Buffer","useNativeEncoders","decodeUtf8","decoder","encodeUtf8","encoder","_setPrototypeOf","p","__proto__","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","_typeof","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","Super","NewTarget","ITERATOR_DONE","freeze","_json","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","_values","resolvers","_closedPromise","r","_closedPromiseResolve","reason","return","_ensureOpen","_error","abort","close","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayCtor","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayCtor","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","toArrayBufferView","ArrayBufferViewCtor","isView","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toUint16Array","toUint32Array","Uint32Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","buffers","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","fromDOMStream","fromNodeStream","byteRange","cmd","bufferLength","threw","throw","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","onEvent","cleanup","events","evt","destroy","race","_defineProperty","enumerableOnly","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","receiver","base","desc","flatbuf","arrow","apache","org","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","NONE","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","BufferType","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","byteIndex","popcnt_bit_range","lhs","rhs","rhsInside","lhsInside","popcnt_array","cnt","pos","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","arrayLikeToArray","nodes","visit","getVisitFn","throwIfNotFound","_node","visitor","dtype","inferDType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","schema","compareFields","fields","others","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","ArrayType","child","valueType","typeIdToChildIndex","idx","atomicDictionaryId","getId","strideForType","nullCount","childData","_nullCount","Data","stride","nullBitmap","childStride","_sliceBuffers","_sliceChildren","newLength","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","_resize","extra","reserved","reserve","numValid","val","cur","buffer64","ArrayType64","_ArrayType64","nulls","finished","_nulls","_isValid","new","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","_offsets","_typeIds","numInvalid","reservedLength","reservedByteLength","queueingStrategy","highWaterMark","sizeProperty","numChunks","append","toVector","opts","_pendingLength","pending","_pending","_flush","pendingLength","_flushPending","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","Parent","Class","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","decimalToString","digits","base64","base32","checks","hint","memo","num","BN","toBigInt","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","numKeys","ktoi","itov","getIndex","ki","vi","kr","vr","k","v","callbackfn","m","str","createRowProxy","getChildAt","defineRowProxyProperties","tmp","row","getter","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","big0","isNaNFast","createElementComparator","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","Chunked","_sliceInternal","columns","_children","vector","isValidInternal","getInternal","element","indexOfInternal","arraySet","typedSet","chunkIndex","found","slices","chunkOffsets","chunkLength","chunkOffset","to","isDictionary","_indices","vectors","selectChunkArgs","_field","Column","column","metadata","_chunk","selectArgs","vals","_selectArgs","selectFieldArgs","_selectChunkArgs","res","selectVectorChildrenArgs","_selectVectorChildrenArgs","ret","fieldIndex","valueIndex","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","_run","run","childIndex","_valueToChildTypeId","childTypeId","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","newBuilder","defaultOptions","getChildOptions","T","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","_Footer","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","startRecordBatchesVector","rb","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_footer","fileBlock","recordBatchesLength","dictionariesLength","FileBlock","createBlock","sync","toUint8Array","peek","AsyncByteStream","body","closed","readAt","getInt32","nBytes","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","substr","multiple","plus","left","right","this_high","other_high","L0","L1","L2","L3","R0","R1","R2","R3","sums","Int128","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","isTimestamp","isInt","isTime","convertArray","isDecimal","isFixedSizeBinary","binaryDataFromJSON","isBool","isUtf8","joined","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","fieldNodes","validity","buffersFromJSON","schemaFieldsFromJSON","_schema","fromJSON","fieldChildrenFromJSON","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldNodes","batch","nodesLength","decodeBuffers","bufferRegions","buffersLength","decodeSchemaFields","fieldsLength","decodeFieldChildren","childrenLength","decodeCustomMetadata","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","_byteLength","_bufferRegions","RangeError","addBuffer","_nullV","assembler","VectorAssembler","vectorChildren","assembleResult","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","reset","sink","objectMode","_writeFooter","compareTo","_writeSchema","payload","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","assemble","_writeDictionaries","_writeBodyBuffers","padding","_writeDictionaryBatch","writableStrategy","readableStrategy","writer","RecordBatchStreamWriter","_writeMagic","RecordBatchFileWriter","noopBuf","nullBufs","bitmapLength","ensureSameLengthData","batchLength","l","batchData","_changeLengthAndBackfillNullBitmap","distributeColumnsIntoRecordBatches","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","_bindDataAccessors","VectorName","vectorFromValuesWithType","ArrowType","InputType","typeCtor","dataCtor","ctor","is64bit","_values64","toBigInt64Array","toBigUint64Array","_row","bound","partial0","partial2","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","vectorIterator","getFn","nullByte","nullBit","nullableIterator","arrayOfVector","variableWidthColumnErrorMessage","____","visitFields","newDataType","throughIterable","throughAsyncIterable","getByteWidth","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","Writer","nameToIndex","selectAt","columnName","newIdx","oldToNew","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","isSync","open","opening","cols","_dictionaries","collect","fs","vs","DictionaryCollector","readAllSync","impl","_impl","isAsync","isFile","isStream","readRecordBatch","RecordBatchReader","fromArrowJSON","fromFileHandle","fromAsyncByteStream","fromByteStream","readAllAsync","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_readFooter","_readDictionaryBatch","seek","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","ge","le","colidx","expr","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","accum","And","Or","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","scan","scanReverse","batchIndex","numRows","count_by","countByteLength","log","counts","_predicate","isBound","FilteredDataFrame","and","bm","hwm","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","eventData","disabled","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","__extends","extendStatics","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","V","U","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","toObject","test1","test2","test3","letter","shouldUseNative","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","isGeneratorFunction","genFun","mark","awrap","async","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","webpackPolyfill","deprecate"],"mappings":"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","file":"static/js/2.f5a0aadb.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.20';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"./AwaitValue\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"./AwaitValue\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  if (typeof Symbol === \"function\" && Symbol.iterator) {\n    iter[Symbol.iterator] = function () {\n      return this;\n    };\n  }\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2019 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2020 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof BigInt64Array ||\n        value instanceof BigUint64Array);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.13.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.13.1\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}